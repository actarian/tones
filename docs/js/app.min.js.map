{"version":3,"sources":["docs/js/app.js"],"names":["Detector","webgl","Tone","Volume","camera","scene","renderer","orbit","drag","light","geometry","material","plane","connector","emitter","song","filter","Filter","type","frequency","rolloff","Q","gain","toMaster","compressor","Compressor","threshold","ratio","attack","release","distortion","Distortion","wet","hats","Player","url","volume","retrigger","fadeOut","chain","loop","Loop","callback","time","start","stop","interval","probability","snare","part","Sequence","velocity","value","gainToDb","kick","MembraneSynth","pitchDecay","octaves","oscillator","envelope","decay","sustain","connect","Math","random","triggerAttack","bass","FMSynth","harmonicity","modulationIndex","carrier","partials","modulator","Part","event","prob","triggerAttackRelease","note","dur","loopEnd","synth","DuoSynth","vibratoAmount","vibratoRate","portamento","voice0","filterEnvelope","baseFrequency","voice1","notes","Transport","bpm","effects","instruments","theremin","d","divideScalar","x","abs","y","z","max","min","i","length","round","setNote","triggerRelease","speed","setSpeed","set","getSong","connectors","hittables","init","animate","window","addEventListener","resize","setSize","innerWidth","innerHeight","addGetWebGLMessage","THREE","Scene","add","AmbientLight","PerspectiveCamera","position","lookAt","aspect","updateProjectionMatrix","SpotLight","castShadow","shadow","mapSize","width","height","near","far","radius","PlaneGeometry","ShadowMaterial","opacity","side","DoubleSide","Mesh","rotation","PI","receiveShadow","BoxGeometry","MeshStandardMaterial","color","roughness","metalness","transparent","push","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","shadowMap","enabled","gammaInput","gammaOutput","PCFSoftShadowMap","document","querySelector","appendChild","domElement","DragControls","e","a","clone","b","sub","TweenLite","to","ease","Power2","easeOut","onUpdate","onComplete","requestAnimationFrame","render"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console, Tone, TweenLite */\n\n(function () {\n    'use strict';\n\n    if (!Detector.webgl) {\n        Detector.addGetWebGLMessage();\n        return;\n    }\n\n    var USE_PCSS_SHADOWS = false;\n\n    var volume = new Tone.Volume(-100);\n\n    var synth;\n    // synth = getSynth(volume);\n\n    var song = getSong();\n\n    var connectors = [];\n    var hittables = [];\n\n    var camera, perspectivecamera, orthocamera, scene, renderer, orbit, drag;\n    var light;\n    var geometry, material, mesh;\n    var plane, connector, emitter;\n\n    // soft shadow maps         \n    if (USE_PCSS_SHADOWS) {\n        getSoftShadowMaps(function () {\n            init();\n            animate();\n        });\n    } else {\n        init();\n        animate();\n    }\n\n    function init() {\n        // scene\n        scene = new THREE.Scene();\n        // scene.fog = new THREE.Fog(0x999999, 5, 100);\n        scene.add(new THREE.AmbientLight(0x444444));\n\n        // camera\n        camera = perspectivecamera = getCamera();\n\n        // camera\n        // camera = orthocamera = getOrthoCamera();\n\n        // light\n        // light = new THREE.PointLight(0xfefefe, 2, 100, 2);\n        light = new THREE.SpotLight(0xfefefe, 1, 1000, 1, 1, 2);\n        // light = new THREE.DirectionalLight(0xdfebff, 1.75);\n        light.position.set(50, 50, 50);\n        light.castShadow = true;\n        light.shadow.mapSize.width = 2048;\n        light.shadow.mapSize.height = 2048;\n        light.shadow.camera.near = 0.1;\n        light.shadow.camera.far = 500;\n        // light.shadow.bias = 0.0001;\n        light.shadow.radius = 1.0001;\n        scene.add(light);\n\n        // plane\n        geometry = new THREE.PlaneGeometry(500, 500, 25, 25);\n        material = new THREE.ShadowMaterial({\n            opacity: 0.25,\n            side: THREE.DoubleSide\n        });\n        /*\n        material = new THREE.MeshStandardMaterial({\n            color: 0xeeeeee,\n            roughtness: 1,\n            metalness: 0,\n            side: THREE.DoubleSide\n        });\n        */\n        plane = new THREE.Mesh(geometry, material);\n        plane.rotation.x = -Math.PI / 2;\n        plane.position.set(0, 0, 0);\n        plane.receiveShadow = true;\n        scene.add(plane);\n\n        // connector\n        geometry = new THREE.BoxGeometry(10, 10, 10);\n        // material = new THREE.MeshNormalMaterial();\n        material = new THREE.MeshStandardMaterial({\n            color: 0x938e8c,\n            roughness: 0.6,\n            metalness: 0.1,\n            opacity: 1.0,\n            transparent: false,\n        });\n        connector = new THREE.Mesh(geometry, material);\n        connector.position.set(0, 5, 0);\n        connector.receiveShadow = false;\n        connector.castShadow = true;\n        scene.add(connector);\n        connectors.push(connector);\n\n        // emitter\n        geometry = new THREE.BoxGeometry(3, 3, 3);\n        // material = new THREE.MeshNormalMaterial();\n        material = new THREE.MeshStandardMaterial({\n            color: 0xffffff,\n            roughness: 0.6,\n            metalness: 0.1,\n            opacity: 1,\n            transparent: false,\n        });\n        emitter = new THREE.Mesh(geometry, material);\n        emitter.position.set(0, 1.5, -20);\n        emitter.receiveShadow = false;\n        emitter.castShadow = true;\n        scene.add(emitter);\n        hittables.push(emitter);\n\n        // renderer\n        renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: true,\n        });\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        renderer.gammaInput = true;\n        renderer.gammaOutput = true;\n        // renderer.shadowMap.type = THREE.BasicShadowMap; // 0\n        // renderer.shadowMap.type = THREE.PCFShadowMap; // 1\n        renderer.shadowMap.type = THREE.PCFSoftShadowMap; // 2  \n\n        document.querySelector('.section-scene').appendChild(renderer.domElement);\n\n        // controls\n        /*\n        orbit = new THREE.OrbitControls(camera);\n        orbit.update();\n        */\n\n        drag = new THREE.DragControls(hittables, camera, renderer.domElement);\n        drag.addEventListener('dragstart', function (e) {\n            if (orbit) {\n                orbit.enabled = false;\n            }\n            song.start();\n            song.theremin.start();\n        });\n        drag.addEventListener('drag', function (e) {\n            var a = emitter.position.clone();\n            var b = connector.position.clone();\n            var d = a.sub(b);\n            song.theremin.drag(d);\n            TweenLite.to(song, 0.5, {\n                speed: 1,\n                ease: Power2.easeOut,\n                onUpdate: function () {\n                    song.setSpeed(song.speed);\n                },\n            });\n        });\n        drag.addEventListener('dragend', function (e) {\n            if (orbit) {\n                orbit.enabled = true;\n            }\n            TweenLite.to(song, 0.5, {\n                speed: 0,\n                ease: Power2.easeOut,\n                onUpdate: function () {\n                    song.setSpeed(song.speed);\n                },\n                onComplete: function () {\n                    song.theremin.stop();\n                    song.stop();\n                },\n            });\n        });\n    }\n\n    function getCamera() {\n        var camera = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 0.01, 1000);\n        camera.position.set(0, 300, 0);\n        camera.lookAt(0, 0, 0);\n        camera.resize = function () {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n        };\n        window.camera = camera;\n        scene.add(camera);\n        return camera;\n    }\n\n    function getOrthoCamera() {\n        var size = 80,\n            aspect = window.innerWidth / window.innerHeight,\n            w = size * aspect,\n            h = size;\n        var camera = new THREE.OrthographicCamera(w / -2, w / 2, h / 2, h / -2, -1000, 1000);\n        camera.position.set(0, 30, 0);\n        camera.lookAt(0, 0, 0);\n        camera.resize = function () {\n            aspect = window.innerWidth / window.innerHeight;\n            w = size * aspect;\n            h = size;\n            camera.left = w / -2;\n            camera.right = w / 2;\n            camera.top = h / 2\n            camera.bottom = h / -2;\n            camera.updateProjectionMatrix();\n        };\n        window.camera = camera;\n        scene.add(camera);\n        return camera;\n    }\n\n    function getSoftShadowMaps(callback) {\n        http({\n            url: 'glsl/pcss.glsl',\n            onload: function (data) {\n                var shader = THREE.ShaderChunk.shadowmap_pars_fragment;\n                shader = shader.replace(\n                    '#ifdef USE_SHADOWMAP',\n                    '#ifdef USE_SHADOWMAP' + data\n                );\n                shader = shader.replace(\n                    '#if defined( SHADOWMAP_TYPE_PCF )',\n                    '\\nreturn PCSS(shadowMap, shadowCoord);\\n' + '#if defined( SHADOWMAP_TYPE_PCF )'\n                );\n                THREE.ShaderChunk.shadowmap_pars_fragment = shader;\n                if (typeof callback === 'function') {\n                    callback();\n                }\n            }\n        });\n    }\n\n    function animate() {\n        requestAnimationFrame(animate);\n        // connector.rotation.x += 0.03 * song.speed;\n        connector.rotation.y += 0.06 * song.speed;\n        light.position.x += (emitter.position.x * -1 - light.position.x) / 20;\n        light.position.z += (emitter.position.z * -1 - light.position.z) / 20;\n        // collisions();\n        renderer.render(scene, camera);\n    }\n\n    function resize() {\n        camera.resize();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function collisions() {\n        connectors.filter(function (c, i) {\n            c.on = false;\n            var origin = c.position.clone();\n            for (var v = 0; v < c.geometry.vertices.length; v++) {\n                var local = c.geometry.vertices[v].clone();\n                var global = local.applyMatrix4(c.matrix);\n                var direction = global.sub(c.position);\n                var ray = new THREE.Raycaster(origin, direction.clone().normalize());\n                var results = ray.intersectObjects(hittables);\n                if (results.length > 0 && results[0].distance < direction.length()) {\n                    c.volume = results[0].object.position.distanceTo(origin) / direction.length();\n                    c.on = true;\n                }\n            }\n            if (c.on) {\n                volume.set('volume', -100 + 100 * c.volume);\n                if (synth) {\n                    synth.triggerAttack('C4');\n                }\n            } else {\n                if (synth) {\n                    synth.triggerRelease();\n                }\n            }\n        });\n    }\n\n    function getSynth(volume) {\n        var synth = new Tone.Synth({\n            oscillator: {\n                type: 'amtriangle',\n                harmonicity: 0.5,\n                modulationType: 'sine'\n            },\n            envelope: {\n                attackCurve: 'exponential',\n                attack: 0.05,\n                decay: 0.2,\n                sustain: 0.2,\n                release: 1.5,\n            },\n            portamento: 0.05\n        });\n\n        /*\n        var delay = new Tone.PingPongDelay({\n            delayTime: '2t',\n            feedback: 0.4,\n            wet: 0.25\n        });\n        delay.chain(volume, Tone.Master);\n        synth.connect(delay);\n        */\n\n        synth.chain(volume, Tone.Master);\n        //play a middle 'C' for the duration of an 8th note\n        // synth.triggerAttackRelease('C4', '8n');\n        return synth;\n    }\n\n    function getSong() {\n\n        // FILTER\n        var filter = new Tone.Filter({\n            type: 'lowpass',\n            frequency: 350,\n            rolloff: -12,\n            Q: 1,\n            gain: 0\n        }).toMaster();\n\n        // COMPRESSOR\n        var compressor = new Tone.Compressor({\n            threshold: -30,\n            ratio: 6,\n            attack: 0.3,\n            release: 0.1\n        }).toMaster();\n\n        // DISTORTION\n        var distortion = new Tone.Distortion({\n            distortion: 0.4,\n            wet: 0.4\n        });\n\n        // HATS\n        var hats = new Tone.Player({\n            url: 'audio/505/hh.[mp3|ogg]',\n            volume: -10,\n            retrigger: true,\n            fadeOut: 0.05\n        }).chain(distortion, compressor);\n        hats.loop = new Tone.Loop({\n            callback: function (time) {\n                hats.start(time).stop(time + 0.05);\n            },\n            interval: '16n',\n            probability: 0.8\n        }).start('1m');\n\n        // SNARE\n        var snare = new Tone.Player({\n            url: 'audio/505/snare.[mp3|ogg]',\n            retrigger: true,\n            fadeOut: 0.1\n        }).chain(distortion, compressor);\n        snare.part = new Tone.Sequence(function (time, velocity) {\n            snare.volume.value = Tone.gainToDb(velocity);\n            snare.start(time).stop(time + 0.1);\n        }, [null, 1, null, [1, 0.3]]).start(0);\n\n        // KICK\n        var kick = new Tone.MembraneSynth({\n            pitchDecay: 0.01,\n            octaves: 6,\n            oscillator: {\n                type: 'square4'\n            },\n            envelope: {\n                attack: 0.001,\n                decay: 0.2,\n                sustain: 0\n            }\n        }).connect(compressor);\n        kick.part = new Tone.Sequence(function (time, probability) {\n            if (Math.random() < probability) {\n                kick.triggerAttack('C1', time);\n            }\n        }, [1, [1, [null, 0.3]], 1, [1, [null, 0.5]], 1, 1, 1, [1, [null, 0.8]]], '2n').start(0);\n\n        // BASS\n        var bass = new Tone.FMSynth({\n            harmonicity: 1,\n            modulationIndex: 3.5,\n            carrier: {\n                oscillator: {\n                    type: 'custom',\n                    partials: [0, 1, 0, 2]\n                },\n                envelope: {\n                    attack: 0.08,\n                    decay: 0.3,\n                    sustain: 0,\n                },\n            },\n            modulator: {\n                oscillator: {\n                    type: 'square'\n                },\n                envelope: {\n                    attack: 0.1,\n                    decay: 0.2,\n                    sustain: 0.3,\n                    release: 0.01\n                },\n            }\n        }).toMaster();\n        bass.part = new Tone.Part(function (time, event) {\n            if (Math.random() < event.prob) {\n                bass.triggerAttackRelease(event.note, event.dur, time);\n            }\n        }, [{\n            time: '0:0',\n            note: 'C2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '0:2',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '0:2.6666',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '0:3.33333',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.9\n        }, {\n            time: '1:0',\n            note: 'C2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '1:2',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '1:2.6666',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '1:3.33333',\n            note: 'E2',\n            dur: '8n',\n            prob: 0.9\n        }, {\n            time: '2:0',\n            note: 'F2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '2:2',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '2:2.6666',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '2:3.33333',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.9\n        }, {\n            time: '3:0',\n            note: 'F2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '3:2',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '3:2.6666',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '3:3.33333',\n            note: 'B1',\n            dur: '8n',\n            prob: 0.9\n        }]).start(0);\n        bass.part.loop = true;\n        bass.part.loopEnd = '4m';\n\n        // SYNTH\n        var synth = new Tone.DuoSynth({\n            vibratoAmount: 0.5,\n            vibratoRate: 5,\n            portamento: 0.1,\n            harmonicity: 1.005,\n            volume: 5,\n            voice0: {\n                volume: -2,\n                oscillator: {\n                    type: 'sawtooth'\n                },\n                filter: {\n                    Q: 1,\n                    type: 'lowpass',\n                    rolloff: -24\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.25,\n                    sustain: 0.4,\n                    release: 1.2\n                },\n                filterEnvelope: {\n                    attack: 0.001,\n                    decay: 0.05,\n                    sustain: 0.3,\n                    release: 2,\n                    baseFrequency: 100,\n                    octaves: 4\n                }\n            },\n            voice1: {\n                volume: -10,\n                oscillator: {\n                    type: 'sawtooth'\n                },\n                filter: {\n                    Q: 2,\n                    type: 'bandpass',\n                    rolloff: -12\n                },\n                envelope: {\n                    attack: 0.25,\n                    decay: 4,\n                    sustain: 0.1,\n                    release: 0.8\n                },\n                filterEnvelope: {\n                    attack: 0.05,\n                    decay: 0.05,\n                    sustain: 0.7,\n                    release: 2,\n                    baseFrequency: 5000,\n                    octaves: -1.5\n                }\n            }\n        }).toMaster();\n        synth.notes = ['C2', 'E2', 'G2', 'A2', 'C3', 'D3', 'E3', 'G3', 'A3', 'B3', 'C4', 'D4', 'E4', 'G4', 'A4', 'B4', 'C5'];\n        synth.note = synth.notes[0];\n\n        Tone.Transport.bpm.value = 1;\n\n        var song = {\n            effects: {\n                filter: filter,\n                compressor: compressor,\n                distortion: distortion,\n            },\n            instruments: {\n                hats: hats,\n                snare: snare,\n                kick: kick,\n                bass: bass,\n                synth: synth,\n            },\n            start: function () {\n                Tone.Transport.start('+0.1');\n            },\n            stop: function () {\n                Tone.Transport.stop();\n            },\n            theremin: {\n                drag: function (d) {\n                    d = d.divideScalar(10);\n                    var x = Math.abs(d.x);\n                    var y = Math.abs(d.z);\n                    x = Math.max(0, Math.min(1, x));\n                    y = Math.max(0, Math.min(1, y));\n                    var i = Math.max(0, Math.min(synth.notes.length - 1, Math.round(y * synth.notes.length - 1)));\n                    var note = synth.notes[synth.notes.length - 1 - i];\n                    if (synth.note !== note) {\n                        synth.note = note;\n                        synth.setNote(note);\n                    }\n                    synth.vibratoAmount.value = x * 10;\n                },\n                start: function () {\n                    synth.triggerAttack(synth.note);\n                },\n                stop: function () {\n                    synth.triggerRelease();\n                },\n            },\n            speed: 0,\n            setSpeed: function (x) {\n                x = Math.max(0, Math.min(1, x));\n                Tone.Transport.bpm.value = 1 + Math.round(x * 124);\n                filter.set('detune', -10000 + (10000 * x));\n            },\n        };\n        return song;\n    }\n\n    function http(options) {\n        var o = {\n            method: 'GET',\n            responseType: 'text',\n        };\n        if (!options || !options.url || !options.onload) {\n            return;\n        }\n        for (var p in options) {\n            o[p] = options[p];\n        }\n        var req = new XMLHttpRequest();\n        req.open(o.method, o.url, true);\n        req.responseType = o.responseType; // 'blob';\n        req.onload = function () {\n            if (this.status === 200) {\n                // var blob = this.response;\n                // var image = URL.createObjectURL(blob); // IE10+\n                o.onload(this.response);\n            }\n        };\n        if (o.onerror) {\n            req.onerror = o.onerror;\n        }\n        if (o.onprogress) {\n            req.onerror = o.onprogress;\n        }\n        req.send();\n    }\n\n    /*\n    function onWheel(e) {\n        var direction = e.deltaY / Math.abs(e.deltaY);\n        camera.position.z = camera.position.z + direction;\n        camera.lookAt(0, 0, 0);\n        camera.updateProjectionMatrix();\n        console.log('onWheel', direction);\n    }\n    window.addEventListener('wheel', onWheel);\n    */\n\n    window.addEventListener('resize', resize, false);\n\n}());"]}