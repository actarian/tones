{"version":3,"sources":["docs/js/app.js"],"names":["volume","synth","camera","scene","renderer","orbit","drag","geometry","material","cube","cube2","Tone","Volume","song","Synth","oscillator","type","harmonicity","modulationType","envelope","attackCurve","attack","decay","sustain","release","portamento","chain","Master","compressor","Compressor","threshold","ratio","toMaster","distortion","Distortion","wet","hats","Player","url","retrigger","fadeOut","loop","Loop","callback","time","start","stop","interval","probability","snare","part","Sequence","velocity","value","gainToDb","kick","MembraneSynth","pitchDecay","octaves","connect","Math","random","triggerAttack","bass","FMSynth","modulationIndex","carrier","partials","modulator","Part","event","prob","triggerAttackRelease","note","dur","loopEnd","DuoSynth","vibratoAmount","vibratoRate","voice0","filter","Q","rolloff","filterEnvelope","baseFrequency","voice1","notes","Transport","bpm","effects","instruments","theremin","x","y","max","min","round","length","setNote","triggerRelease","speed","setSpeed","getSong","connectors","hittables","THREE","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","add","BoxGeometry","MeshNormalMaterial","Mesh","push","WebGLRenderer","antialias","alpha","setSize","document","querySelector","appendChild","domElement","OrbitControls","update","DragControls","addEventListener","e","enabled","a","clone","b","d","sub","addScalar","divideScalar","z","TweenLite","to","ease","Power2","easeOut","onUpdate","onComplete","animate","requestAnimationFrame","rotation","render","aspect","updateProjectionMatrix"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console, Tone, TweenLite */\n\n(function () {\n    'use strict';\n\n    var volume = new Tone.Volume(-100);\n    var synth = getSynth(volume);\n\n    var song = getSong();\n\n    var connectors = [];\n    var hittables = [];\n\n    var camera, scene, renderer, orbit, drag;\n    var geometry, material, mesh;\n\n    var cube, cube2;\n\n    init();\n    animate();\n\n    function init() {\n        // scene\n        scene = new THREE.Scene();\n\n        // camera\n        // camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, 1, 1000);\n        camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 1000);\n        camera.position.set(0, 20, 40);\n        camera.lookAt(0, 0, 0);\n        scene.add(camera);\n\n        // box\n        geometry = new THREE.BoxGeometry(10, 10, 10);\n        material = new THREE.MeshNormalMaterial();\n        cube = new THREE.Mesh(geometry, material);\n        scene.add(cube);\n        connectors.push(cube);\n\n        // sphrer\n        geometry = new THREE.BoxGeometry(3, 3, 3);\n        material = new THREE.MeshNormalMaterial();\n        cube2 = new THREE.Mesh(geometry, material);\n        cube2.position.set(0, -20, 0);\n        scene.add(cube2);\n        hittables.push(cube2);\n\n        // renderer\n        renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: true,\n        });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        document.querySelector('.section-scene').appendChild(renderer.domElement);\n\n        // controls\n        orbit = new THREE.OrbitControls(camera);\n        orbit.update();\n\n        drag = new THREE.DragControls(hittables, camera, renderer.domElement);\n        drag.addEventListener('dragstart', function (e) {\n            orbit.enabled = false;\n            song.start();\n            song.theremin.start();\n        });\n        drag.addEventListener('drag', function (e) {\n            var a = cube2.position.clone();\n            var b = cube.position.clone();\n            var d = a.sub(b).addScalar(12).divideScalar(24);\n            song.theremin.drag(d.z, d.x);\n            TweenLite.to(song, 0.5, {\n                speed: 1,\n                ease: Power2.easeOut,\n                onUpdate: function () {\n                    song.setSpeed(song.speed);\n                },\n            });\n        });\n        drag.addEventListener('dragend', function (e) {\n            orbit.enabled = true;\n            TweenLite.to(song, 0.5, {\n                speed: 0,\n                ease: Power2.easeOut,\n                onUpdate: function () {\n                    song.setSpeed(song.speed);\n                },\n                onComplete: function () {\n                    song.theremin.stop();\n                    song.stop();\n                },\n            });\n        });\n    }\n\n    function animate() {\n        requestAnimationFrame(animate);\n        cube.rotation.x += 0.03 * song.speed;\n        cube.rotation.y += 0.06 * song.speed;\n        // collisions();\n        renderer.render(scene, camera);\n    }\n\n    function resize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function collisions() {\n        connectors.filter(function (c, i) {\n            c.on = false;\n            var origin = c.position.clone();\n            for (var v = 0; v < c.geometry.vertices.length; v++) {\n                var local = c.geometry.vertices[v].clone();\n                var global = local.applyMatrix4(c.matrix);\n                var direction = global.sub(c.position);\n                var ray = new THREE.Raycaster(origin, direction.clone().normalize());\n                var results = ray.intersectObjects(hittables);\n                if (results.length > 0 && results[0].distance < direction.length()) {\n                    c.volume = results[0].object.position.distanceTo(origin) / direction.length();\n                    c.on = true;\n                }\n            }\n            if (c.on) {\n                volume.set('volume', -100 + 100 * c.volume);\n                synth.triggerAttack('C4');\n            } else {\n                synth.triggerRelease();\n            }\n        });\n    }\n\n    function getSynth(volume) {\n        var synth = new Tone.Synth({\n            oscillator: {\n                type: 'amtriangle',\n                harmonicity: 0.5,\n                modulationType: 'sine'\n            },\n            envelope: {\n                attackCurve: 'exponential',\n                attack: 0.05,\n                decay: 0.2,\n                sustain: 0.2,\n                release: 1.5,\n            },\n            portamento: 0.05\n        });\n\n        /*\n        var delay = new Tone.PingPongDelay({\n            delayTime: '2t',\n            feedback: 0.4,\n            wet: 0.25\n        });\n        delay.chain(volume, Tone.Master);\n        synth.connect(delay);\n        */\n\n        synth.chain(volume, Tone.Master);\n        //play a middle 'C' for the duration of an 8th note\n        // synth.triggerAttackRelease('C4', '8n');\n        return synth;\n    }\n\n    function getSong() {\n        // COMPRESSOR\n        var compressor = new Tone.Compressor({\n            threshold: -30,\n            ratio: 6,\n            attack: 0.3,\n            release: 0.1\n        }).toMaster();\n\n        // DISTORTION\n        var distortion = new Tone.Distortion({\n            distortion: 0.4,\n            wet: 0.4\n        });\n\n        // HATS\n        var hats = new Tone.Player({\n            url: 'audio/505/hh.[mp3|ogg]',\n            volume: -10,\n            retrigger: true,\n            fadeOut: 0.05\n        }).chain(distortion, compressor);\n        hats.loop = new Tone.Loop({\n            callback: function (time) {\n                hats.start(time).stop(time + 0.05);\n            },\n            interval: '16n',\n            probability: 0.8\n        }).start('1m');\n\n        // SNARE\n        var snare = new Tone.Player({\n            url: 'audio/505/snare.[mp3|ogg]',\n            retrigger: true,\n            fadeOut: 0.1\n        }).chain(distortion, compressor);\n        snare.part = new Tone.Sequence(function (time, velocity) {\n            snare.volume.value = Tone.gainToDb(velocity);\n            snare.start(time).stop(time + 0.1);\n        }, [null, 1, null, [1, 0.3]]).start(0);\n\n        // KICK\n        var kick = new Tone.MembraneSynth({\n            pitchDecay: 0.01,\n            octaves: 6,\n            oscillator: {\n                type: 'square4'\n            },\n            envelope: {\n                attack: 0.001,\n                decay: 0.2,\n                sustain: 0\n            }\n        }).connect(compressor);\n        kick.part = new Tone.Sequence(function (time, probability) {\n            if (Math.random() < probability) {\n                kick.triggerAttack('C1', time);\n            }\n        }, [1, [1, [null, 0.3]], 1, [1, [null, 0.5]], 1, 1, 1, [1, [null, 0.8]]], '2n').start(0);\n\n        // BASS\n        var bass = new Tone.FMSynth({\n            harmonicity: 1,\n            modulationIndex: 3.5,\n            carrier: {\n                oscillator: {\n                    type: 'custom',\n                    partials: [0, 1, 0, 2]\n                },\n                envelope: {\n                    attack: 0.08,\n                    decay: 0.3,\n                    sustain: 0,\n                },\n            },\n            modulator: {\n                oscillator: {\n                    type: 'square'\n                },\n                envelope: {\n                    attack: 0.1,\n                    decay: 0.2,\n                    sustain: 0.3,\n                    release: 0.01\n                },\n            }\n        }).toMaster();\n        bass.part = new Tone.Part(function (time, event) {\n            if (Math.random() < event.prob) {\n                bass.triggerAttackRelease(event.note, event.dur, time);\n            }\n        }, [{\n            time: '0:0',\n            note: 'C2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '0:2',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '0:2.6666',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '0:3.33333',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.9\n        }, {\n            time: '1:0',\n            note: 'C2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '1:2',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '1:2.6666',\n            note: 'C2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '1:3.33333',\n            note: 'E2',\n            dur: '8n',\n            prob: 0.9\n        }, {\n            time: '2:0',\n            note: 'F2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '2:2',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '2:2.6666',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '2:3.33333',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.9\n        }, {\n            time: '3:0',\n            note: 'F2',\n            dur: '4n.',\n            prob: 1\n        }, {\n            time: '3:2',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.6\n        }, {\n            time: '3:2.6666',\n            note: 'F2',\n            dur: '8n',\n            prob: 0.4\n        }, {\n            time: '3:3.33333',\n            note: 'B1',\n            dur: '8n',\n            prob: 0.9\n        }]).start(0);\n        bass.part.loop = true;\n        bass.part.loopEnd = '4m';\n\n        // SYNTH\n        var synth = new Tone.DuoSynth({\n            vibratoAmount: 0.5,\n            vibratoRate: 5,\n            portamento: 0.1,\n            harmonicity: 1.005,\n            volume: 5,\n            voice0: {\n                volume: -2,\n                oscillator: {\n                    type: 'sawtooth'\n                },\n                filter: {\n                    Q: 1,\n                    type: 'lowpass',\n                    rolloff: -24\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.25,\n                    sustain: 0.4,\n                    release: 1.2\n                },\n                filterEnvelope: {\n                    attack: 0.001,\n                    decay: 0.05,\n                    sustain: 0.3,\n                    release: 2,\n                    baseFrequency: 100,\n                    octaves: 4\n                }\n            },\n            voice1: {\n                volume: -10,\n                oscillator: {\n                    type: 'sawtooth'\n                },\n                filter: {\n                    Q: 2,\n                    type: 'bandpass',\n                    rolloff: -12\n                },\n                envelope: {\n                    attack: 0.25,\n                    decay: 4,\n                    sustain: 0.1,\n                    release: 0.8\n                },\n                filterEnvelope: {\n                    attack: 0.05,\n                    decay: 0.05,\n                    sustain: 0.7,\n                    release: 2,\n                    baseFrequency: 5000,\n                    octaves: -1.5\n                }\n            }\n        }).toMaster();\n        synth.notes = ['C2', 'E2', 'G2', 'A2', 'C3', 'D3', 'E3', 'G3', 'A3', 'B3', 'C4', 'D4', 'E4', 'G4', 'A4', 'B4', 'C5'];\n        synth.note = synth.notes[0];\n\n        Tone.Transport.bpm.value = 1;\n\n        var song = {\n            effects: {\n                compressor: compressor,\n                distortion: distortion,\n            },\n            instruments: {\n                hats: hats,\n                snare: snare,\n                kick: kick,\n                bass: bass,\n                synth: synth,\n            },\n            start: function () {\n                Tone.Transport.start('+0.1');\n            },\n            stop: function () {\n                Tone.Transport.stop();\n            },\n            theremin: {\n                drag: function (x, y) {\n                    x = Math.max(0, Math.min(1, x));\n                    y = Math.max(0, Math.min(1, y));\n                    var note = synth.notes[Math.round(x * synth.notes.length - 1)];\n                    if (synth.note !== note) {\n                        synth.note = note;\n                        synth.setNote(note);\n                    }\n                    synth.vibratoAmount.value = y * 2;\n                },\n                start: function () {\n                    synth.triggerAttack(synth.note);\n                },\n                stop: function () {\n                    synth.triggerRelease();\n                },\n            },\n            speed: 0,\n            setSpeed: function (x) {\n                x = Math.max(0, Math.min(1, x));\n                Tone.Transport.bpm.value = 1 + Math.round(x * 124);\n            },\n        };\n        return song;\n    }\n\n    /*\n\n    var raycaster = new THREE.Raycaster();\n    var down;\n\n    function getTouch(e) {\n        return new THREE.Vector2((e.clientX / window.innerWidth) * 2 - 1, -(e.clientY / window.innerHeight) * 2 + 1);\n    }\n\n    function onDown(e) {\n        // calculate mouse position in normalized device coordinates\n        // (-1 to +1) for both components\n        down = getTouch(e);\n        // down.x = (e.clientX / renderer.domElement.offsetWidth) * 2 - 1;\n        // down.y = -(e.clientY / renderer.domElement.offsetHeight) * 2 + 1;\n        raycaster.setFromCamera(down, camera);\n        var hitted = raycaster.intersectObjects(hittables);\n        // console.log(hitted.length, down.x, down.y);\n        if (hitted.length) {\n            if (orbit) {\n                orbit.enabled = false;\n            }\n            var index = hittables.indexOf(hitted[0].object);\n            down.index = index;\n            down.rotation = connectors[index].inner.rotation.clone();\n            // connectors[index].inner.position.x = 10;\n            connectors[index].flip();\n        } else {\n            down = null;\n        }\n    }\n\n    function onMove(e) {\n        if (down) {\n            var move = getTouch(e);\n            var diff = move.sub(down);\n            var index = down.index;\n            var rotation = connectors[index].inner.rotation;\n            rotation.x = down.rotation.x + diff.y;\n            // console.log('rotation.x', rotation.x);\n        }\n    }\n\n    function onUp(e) {\n        down = null;\n        if (orbit) {\n            orbit.enabled = true;\n        }\n    }\n\n    function onAdd() {\n        addElement();\n    }\n\n    function onRemove() {\n        removeElement();\n    }\n\n    renderer.domElement.addEventListener('mousedown', onDown);\n    renderer.domElement.addEventListener('mousemove', onMove);\n    window.addEventListener('mouseup', onUp);\n    */\n    window.addEventListener('resize', resize, false);\n\n}());"]}